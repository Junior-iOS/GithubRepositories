//
//  PullRequestsListViewController.swift
//  GithubRepositories
//
//  Created by Junior Silva on 21/07/20.
//  Copyright (c) 2020 Junior Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SafariServices

protocol PullRequestsListDisplayLogic: class {
    func reloadTable()
    func stopActivityIndicator()
    func displayEmptyState()
    func displayRequestOwner(_ repo: Repository)
    func displayGithubPageFor(_ html: String)
}

class PullRequestsListViewController: UIViewController {
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    
    var interactor: PullRequestsListBusinessLogic?
    var router: (NSObjectProtocol & PullRequestsListRoutingLogic & PullRequestsListDataPassing)?
    
    let tableHeaderView = PullRequestsTableViewHeader()
    let kScreenWidth = UIScreen.main.bounds.width
    let kTableViewFooterHeight: CGFloat = 188

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = PullRequestsListInteractor()
        let presenter = PullRequestsListPresenter()
        let router = PullRequestsListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()

        if let headerView = tableView.tableHeaderView {
            let height = headerView.systemLayoutSizeFitting(UIView.layoutFittingCompressedSize).height
            var headerFrame = headerView.frame
            if height != headerFrame.size.height {
                headerFrame.size.height = height
                headerView.frame = headerFrame
                tableView.tableHeaderView = headerView
            }
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupTableView()
        interactor?.fetchPullRequestsList()
    }
    
    private func setupTableView() {
        tableView.tableHeaderView = tableHeaderView
        tableView.delegate = self
        tableView.dataSource = self
        tableView.separatorStyle = .singleLine
        tableView.register(PullRequestListTableViewCell.self, forCellReuseIdentifier: PullRequestListTableViewCell.identifier)
    }

}

extension PullRequestsListViewController: PullRequestsListDisplayLogic {
    
    func reloadTable() {
        tableView.reloadData()
    }
    
    func stopActivityIndicator() {
        activityIndicator.stopAnimating()
    }
    
    func displayRequestOwner(_ repo: Repository) {
        tableHeaderView.typeLabel.text = "\(repo.owner.name.capitalized) pull requests"
        reloadTable()
    }
    
    func displayEmptyState() {
        tableHeaderView.typeLabel.text = "Ops!"
        let footer = PullRequestsTableViewFooter()
        footer.frame.size.height = kTableViewFooterHeight
        footer.frame.size.width = kScreenWidth
        tableView.tableFooterView = footer
        tableView.reloadData()
    }
    
    func displayGithubPageFor(_ html: String) {
        guard let url = URL(string: html) else { return }
        let vc = SFSafariViewController(url: url)
        present(vc, animated: true)
    }

}

// MARK TABLEVIEW DELEGATE AND DATASOURCE
extension PullRequestsListViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        interactor?.didSelectRow(at: indexPath.row)
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return interactor?.numberOfRows ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: PullRequestListTableViewCell.identifier) as? PullRequestListTableViewCell,
            let viewModel = interactor?.cellForRow(at: indexPath.row) else { return UITableViewCell() }
        
        cell.configure(viewModel)
        cell.accessibilityLabel = "Pull Requests"
        
        return cell
    }
    
}
