//
//  RepositoriesListModels.swift
//  GithubRepositories
//
//  Created by Junior Silva on 21/07/20.
//  Copyright (c) 2020 Junior Silva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum RepositoriesList {
    
    struct Response: Codable {
        let repositories: [Repository]?
        
        enum CodingKeys: String, CodingKey {
            case repositories = "items"
        }
    }
    
    struct ViewModel {
        let name: String
        let description: String
        let stars: Int
        let forks: Int
        let ownerName: String
        let ownerAvatar: String
        
        init(repository: Repository) {
            self.name = repository.name
            self.description = repository.description
            self.stars = repository.stars
            self.forks = repository.forks
            self.ownerName = "\(repository.owner.name)"
            self.ownerAvatar = repository.owner.avatar
        }
    }
}

struct Repository: Codable {
    let name: String
    let description: String
    let stars: Int
    let forks: Int
    let owner: Owner
    
    enum CodingKeys: String, CodingKey {
        case name
        case description
        case stars = "stargazers_count"
        case forks = "forks_count"
        case owner
    }
}

struct Owner: Codable {
    let name: String
    let avatar: String
    
    enum CodingKeys: String, CodingKey {
        case name = "login"
        case avatar = "avatar_url"
    }
}
